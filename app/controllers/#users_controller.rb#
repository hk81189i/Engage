class UsersController < ApplicationController
  before_action :set_user, only: [:show, :edit, :update, :destroy]

  # GET /users
  # GET /users.json
  def index
@user = User.all
@pplan = Pplan.all.to_a
$length= @pplan.length
puts ("length is #$length")

@a=0
while @a <= $length-1  do
   puts("value of @a" )
puts @a

  @user.find_by(:id =>@lead_id)
logger.debug(@leadnow)
@leadnow.amountinpp = @total
@leadnow.balance =  @leadnow.selling_price - @leadnow.token
@leadnow.amountdueinpp = @leadnow.balance - @total
@leadnow.save
puts @a

   @a +=1

end

@b=0
while @b <= $length-1 do 
@leadsrightnow  = @leads.where('batch' = 'june')
@totalrevenue = @totalrevenue + @leadsrightnow.selling_price
@b +=1
end

 end

#==================================================
  # GET /users/1
  # GET /users/1.json
  def show
  end

  # GET /users/new
  def new
    @user = User.new
  end

  # GET /users/1/edit
  def edit
  end

  # POST /users
  # POST /users.json
  def create
    @user = User.new(user_params)

    respond_to do |format|
      if @user.save
        format.html { redirect_to @user, notice: 'User was successfully created.' }
        format.json { render action: 'show', status: :created, location: @user }
      else
        format.html { render action: 'new' }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /users/1
  # PATCH/PUT /users/1.json
  def update
    respond_to do |format|
      if @user.update(user_params)
        format.html { redirect_to @user, notice: 'User was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: 'edit' }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /users/1
  # DELETE /users/1.json
  def destroy
    @user.destroy
    respond_to do |format|
      format.html { redirect_to users_url }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_user
      @user = User.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def user_params
      params.require(:user).permit(:name, :email, :phone, :bdm_id, :saledate, :selling_price, :token)
    end
end
