class SalesController < ApplicationController
  protect_from_forgery :only => [:delete]
  require 'mandrill'
  
  before_action :set_sale, only: [:show, :edit, :update, :destroy]


  # GET /sales
  # GET /sales.json
  def index

    @sales = Sale.all
  end

  # GET /sales/1
  # GET /sales/1.json
  def show


  end

  # GET /sales/new
  def new
    @sale = Sale.new
  end

  # GET /sales/1/edit
  def edit
  end
  
  # POST /sales

  # POST /sales.json
  def create

  end

  # PATCH/PUT /sales/1
  # PATCH/PUT /sales/1.json
  def update
    respond_to do |format|
      if @sale.update(sale_params)
        @sale.update(:approve => 1)
        require 'xmlrpc/client'
        @key="693a317c912f96cca8ac329986fe7663"
        @server = XMLRPC::Client.new2("https://zh160.infusionsoft.com:443/api/xmlrpc")
        @server.call("FunnelService.achieveGoal",@key,'zh160','salecomplete', @sale.infu_id)
        format.html { redirect_to dashboard_index_path, notice: 'Sale was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: 'edit' }
        format.json { render json: @sale.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /sales/1
  # DELETE /sales/1.json
  def destroy
    @sale.destroy
    respond_to do |format|
      format.html { redirect_to sales_url }
      format.json { head :no_content }
    end
  end

  private
  # Use callbacks to share common setup or constraints between actions.
  def set_sale
    @sale = Sale.find(params[:id])
  end

  # Never trust parameters from the scary internet, only allow the white list through.
  def sale_params
    params.permit(:user_id, :fname, :infu_owner_name, :infu_owner_id, :infu_owner_email, :referal_code, :referal_id,  :email, :lname,  :batch_id,  :product_id, :infu_id, :selling_price, :inf_owner_id, :saledate, :owner_id,  :infu_batch, :phone, :approve, :sent_first_invoice, :payment_complete )
  end
end
